# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR # Descriptive name for the workflow
on: pull_request # This workflow runs specifically when a pull request is opened or updated
permissions:
  checks: write # Permissions needed for GitHub Actions to write checks/status to the PR
  contents: read # Permission to read your repository's content
  pull-requests: write # Permission to comment on the pull request (e.g., with the preview URL)

jobs:
  build_and_preview:
    # This condition ensures the workflow only runs for PRs from within the same repository,
    # preventing issues with external forks trying to use your Firebase project.
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest # GitHub-hosted runner with Ubuntu

    steps:
      - name: Checkout code # Standard step to get your repository's code
        uses: actions/checkout@v4

      # --- START OF FLUTTER SPECIFIC STEPS ---
      - name: Setup Flutter # Action to set up the Flutter SDK environment
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.3' # IMPORTANT: Change to your specific Flutter version (e.g., '3.32.2') or 'stable'
          channel: 'stable' # Use 'beta' or 'master' if you are on those channels

      - name: Get Flutter dependencies # Installs all dependencies listed in your pubspec.yaml
        run: flutter pub get

      - name: Build Flutter Web # Builds your Flutter app for the web platform
        run: flutter build web --release # --release for optimized production build
      # --- END OF FLUTTER SPECIFIC STEPS ---

      - name: Deploy to Firebase Hosting Preview Channel # Deploys the built app to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0 # Official Firebase Hosting GitHub Action
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}' # GitHub's built-in token for repository access
          # This secret contains your Firebase Service Account JSON key, which you correctly set up.
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_AI_AGENT }}'
          projectId: ai-agent # Your actual Firebase Project ID
          # channelId: pr-${{ github.event.number }} # This would create a unique preview channel per PR number
          channelId: preview # This is a common default for PRs, often creating a single "preview" channel
          # target: your-hosting-target # Uncomment and set if you have multiple hosting sites in firebase.json
